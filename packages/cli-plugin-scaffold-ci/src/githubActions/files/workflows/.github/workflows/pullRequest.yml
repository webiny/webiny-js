name: Pull Requests

on:
  pull_request:
    branches: [dev, staging, prod]

jobs:
  # This first step ensures we don't run the workflow if the repository is empty.
  # Feel free to remove this step once your project is pushed to the repository.
  repository-check:
    name: Check if repository is empty
    runs-on: ubuntu-latest
    outputs:
      ready: ${{ steps.webiny-project-js.outputs.ready }}
    steps:
      - uses: actions/checkout@v2

      - name: Check if "webiny.project.js" exists
        id: webiny-project-js
        run: echo "::set-output name=ready::${{ hashFiles('webiny.project.ts') != '' }}"

  build-test-static-unit:
    name: Build and run static and unit tests
    needs: repository-check
    runs-on: ubuntu-latest
    if: needs.repository-check.outputs.ready == 'true'
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: 12

      - uses: actions/checkout@v2

      # 1. Install and cache dependencies.
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: .yarn/cache
          key: yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn --immutable

      # 2. Run static code analysis.
      - name: Check code formatting
        run: yarn prettier:check

      - name: ESLint
        run: yarn eslint

      # 3. Build custom packages (all packages located within the "packages" folder).
      - name: Build packages
        run: yarn webiny workspaces run build --folder packages

      # 4. Run unit tests.
      - name: Run unit tests
        run: yarn test:unit

  build-test-integration-e2e:
    name: Build and run integration and E2E tests
    needs: build-test-static-unit
    runs-on: ubuntu-latest
    environment: pr
    env:
      NODE_OPTIONS: --max_old_space_size=4096
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      PULUMI_SECRETS_PROVIDER: ${{ secrets.PULUMI_SECRETS_PROVIDER }}
      PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
      WEBINY_PULUMI_BACKEND: ${{ secrets.WEBINY_PULUMI_BACKEND }}
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: 12

      - uses: actions/checkout@v2

      # 1. Install and cache dependencies.
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: .yarn/cache
          key: yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn --immutable

      # 2. Build custom packages (all packages located within the "packages" folder).
      - name: Build packages
        run: yarn webiny workspaces run build --folder packages

      # 3. Deploy to a short-lived environment (will be destroyed once the PR is closed).
      - name: Deploy
        run: yarn webiny deploy --env pr${{ github.event.pull_request.number }}

      # 4. Run integration tests.
      - name: Run integration tests
        run: yarn test:integration

      # 5. Run end-to-end tests.
      - name: Run end-to-end tests
        run: yarn test:e2e

      # Add additional steps if needed. For example, if you have additional E2E
      # tests done with Cypress (https://www.cypress.io/), you can run them here.
