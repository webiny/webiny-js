import { CmsModel, CmsContext, CmsFieldTypePlugins } from "~/types";
import { GraphQLSchemaDefinition } from "@webiny/handler-graphql/types";

interface RenderTypesFromFieldPlugins {
    (params: {
        models: CmsModel[];
        fieldTypePlugins: CmsFieldTypePlugins;
        type: string;
    }): GraphQLSchemaDefinition<CmsContext>[];
}

const TYPE_MAP = {
    preview: "read",
    read: "read",
    manage: "manage"
};

export const getSchemaFromFieldPlugins: RenderTypesFromFieldPlugins = ({
    models,
    fieldTypePlugins,
    type
}) => {
    return Object.values(fieldTypePlugins)
        .map(pl => {
            // Render gql types generated by field type plugins
            if (typeof pl[TYPE_MAP[type]].createSchema === "function") {
                return pl[TYPE_MAP[type]].createSchema({ models });
            }
            return null;
        })
        .filter(Boolean);
};
