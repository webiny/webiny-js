# This file was automatically generated by github-actions-wac.
# DO NOT MODIFY IT BY HAND. Instead, modify the source *.wac.ts file(s)
# and run "github-actions-wac build" (or "ghawac build") to regenerate this file.
# For more information, run "github-actions-wac --help".
name: Pull Requests
'on':
  pull_request:
    branches:
      - next-ci-workflows
env:
  NODE_OPTIONS: '--max_old_space_size=4096'
jobs:
  validate-workflows:
    name: Validate workflows
    runs-on: ubuntu-latest
    steps:
      - name: Validate
        run: npx github-actions-wac validate
  validate-commits:
    name: Validate commit messages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: webiny/action-conventional-commits@v1.1.0
  init:
    name: Init
    runs-on: webiny-build-packages
    outputs:
      day: ${{ steps.get-day.outputs.day }}
      ts: ${{ steps.get-timestamp.outputs.ts }}
      is-fork-pr: ${{ steps.is-fork-pr.outputs.is-fork-pr }}
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: actions/checkout@v3
        with:
          path: ''
      - name: Get day of the month
        id: get-day
        run: >-
          echo "day=$(node --eval "console.log(new Date().getDate())")" >>
          $GITHUB_OUTPUT
      - name: Get timestamp
        id: get-timestamp
        run: >-
          echo "ts=$(node --eval "console.log(new Date().getTime())")" >>
          $GITHUB_OUTPUT
      - name: Is a PR from a fork
        id: is-fork-pr
        run: >-
          echo "is-fork-pr=${{ github.event.pull_request.head.repo.fork }}" >>
          $GITHUB_OUTPUT
      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: .yarn/cache
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/cache@v3
        id: cached-packages
        with:
          path: .webiny/cached-packages
          key: >-
            ${{ runner.os }}-${{ steps.get-day.outputs.day }}-${{
            secrets.RANDOM_CACHE_KEY_SUFFIX }}
      - name: Install dependencies
        run: yarn --immutable
      - name: Build packages
        run: yarn build:quick
      - uses: actions/cache@v3
        id: packages-cache
        with:
          path: .webiny/cached-packages
          key: packages-cache-${{ steps.get-timestamp.outputs.ts }}
  code-analysis:
    needs: init
    name: Static code analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: actions/checkout@v3
        with:
          path: ''
      - uses: actions/cache@v3
        with:
          path: .yarn/cache
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/cache@v3
        with:
          path: .webiny/cached-packages
          key: packages-cache-${{ needs.init.outputs.ts }}
      - name: Install dependencies
        run: yarn --immutable
      - name: Check code formatting
        run: yarn prettier:check
      - name: Check dependencies
        run: yarn adio
      - name: Check TS configs
        run: yarn check-ts-configs
      - name: ESLint
        run: yarn eslint
  code-analysis-typescript:
    name: Static code analysis (TypeScript)
    runs-on: webiny-build-packages
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: actions/checkout@v3
        with:
          path: ''
      - uses: actions/cache@v3
        with:
          path: .yarn/cache
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn --immutable
      - name: Build packages (full)
        run: yarn build
  jest-tests-no-storage:
    needs: init
    name: ${{ matrix.package.cmd }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        node:
          - 18
        package: >-
          ${{
          fromJson('[{"cmd":"packages/api","id":"api"},{"cmd":"packages/api-admin-settings","id":"api-admin-settings"},{"cmd":"packages/api-authentication","id":"api-authentication"},{"cmd":"packages/api-authentication-cognito","id":"api-authentication-cognito"},{"cmd":"packages/api-dynamodb-to-elasticsearch","id":"api-dynamodb-to-elasticsearch"},{"cmd":"packages/api-elasticsearch","id":"api-elasticsearch"},{"cmd":"packages/api-headless-cms-ddb","id":"api-headless-cms-ddb"},{"cmd":"packages/api-wcp","id":"api-wcp"},{"cmd":"packages/app-aco","id":"app-aco"},{"cmd":"packages/app-admin","id":"app-admin"},{"cmd":"packages/cwp-template-aws","id":"cwp-template-aws"},{"cmd":"packages/data-migration","id":"data-migration"},{"cmd":"packages/db-dynamodb","id":"db-dynamodb"},{"cmd":"packages/form","id":"form"},{"cmd":"packages/handler","id":"handler"},{"cmd":"packages/handler-aws","id":"handler-aws"},{"cmd":"packages/handler-graphql","id":"handler-graphql"},{"cmd":"packages/handler-logs","id":"handler-logs"},{"cmd":"packages/ioc","id":"ioc"},{"cmd":"packages/lexical-converter","id":"lexical-converter"},{"cmd":"packages/migrations","id":"migrations"},{"cmd":"packages/plugins","id":"plugins"},{"cmd":"packages/pubsub","id":"pubsub"},{"cmd":"packages/react-properties","id":"react-properties"},{"cmd":"packages/react-rich-text-lexical-renderer","id":"react-rich-text-lexical-renderer"},{"cmd":"packages/utils","id":"utils"},{"cmd":"packages/validation","id":"validation"}]')
          }}
    runs-on: ${{ matrix.os }}
    env: {}
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: actions/checkout@v3
        with:
          path: ''
      - uses: actions/cache@v3
        with:
          path: .yarn/cache
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/cache@v3
        with:
          path: .webiny/cached-packages
          key: packages-cache-${{ needs.init.outputs.ts }}
      - name: Install dependencies
        run: yarn --immutable
      - name: Build packages
        run: yarn build:quick
      - name: Run tests
        run: yarn test ${{ matrix.package.cmd }}
  jest-tests-ddb:
    needs: init
    name: ${{ matrix.package.cmd }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        node:
          - 18
        package: >-
          ${{ fromJson('[{"cmd":"packages/api-aco
          --storage=ddb","storage":"ddb","id":"api-aco_ddb"},{"cmd":"packages/api-apw
          --storage=ddb","storage":"ddb","id":"api-apw_ddb"},{"cmd":"packages/api-file-manager
          --storage=ddb","storage":"ddb","id":"api-file-manager_ddb"},{"cmd":"packages/api-form-builder
          --storage=ddb","storage":"ddb","id":"api-form-builder_ddb"},{"cmd":"packages/api-headless-cms
          --storage=ddb","storage":"ddb","id":"api-headless-cms_ddb"},{"cmd":"packages/api-i18n
          --storage=ddb","storage":"ddb","id":"api-i18n_ddb"},{"cmd":"packages/api-mailer
          --storage=ddb","storage":"ddb","id":"api-mailer_ddb"},{"cmd":"packages/api-page-builder
          --storage=ddb","storage":"ddb","id":"api-page-builder_ddb"},{"cmd":"packages/api-page-builder-aco
          --storage=ddb","storage":"ddb","id":"api-page-builder-aco_ddb"},{"cmd":"packages/api-page-builder-import-export
          --storage=ddb","storage":"ddb","id":"api-page-builder-import-export_ddb"},{"cmd":"packages/api-prerendering-service
          --storage=ddb","storage":"ddb","id":"api-prerendering-service_ddb"},{"cmd":"packages/api-security
          --storage=ddb","storage":"ddb","id":"api-security_ddb"},{"cmd":"packages/api-security-cognito
          --storage=ddb","storage":"ddb","id":"api-security-cognito_ddb"},{"cmd":"packages/api-tenancy
          --storage=ddb","storage":"ddb","id":"api-tenancy_ddb"},{"cmd":"packages/api-tenant-manager
          --storage=ddb","storage":"ddb","id":"api-tenant-manager_ddb"}]') }}
    runs-on: ${{ matrix.os }}
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: actions/checkout@v3
        with:
          path: ''
      - uses: actions/cache@v3
        with:
          path: .yarn/cache
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/cache@v3
        with:
          path: .webiny/cached-packages
          key: packages-cache-${{ needs.init.outputs.ts }}
      - name: Install dependencies
        run: yarn --immutable
      - name: Build packages
        run: yarn build:quick
      - name: Run tests
        run: yarn test ${{ matrix.package.cmd }}
  verdaccio-publish:
    if: needs.init.outputs.is-fork-pr != 'true'
    needs: init
    name: Publish to Verdaccio
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}
      - uses: actions/cache@v3
        with:
          path: .yarn/cache
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/cache@v3
        with:
          path: .webiny/cached-packages
          key: packages-cache-${{ needs.init.outputs.ts }}
      - name: Install dependencies
        run: yarn --immutable
      - name: Build packages
        run: yarn build:quick
      - name: Start Verdaccio local server
        working-directory: ''
        run: npx pm2 start verdaccio -- -c .verdaccio.yaml
      - name: Configure NPM to use local registry
        run: npm config set registry http://localhost:4873
      - name: Set git email
        run: git config --global user.email "webiny-bot@webiny.com"
      - name: Set git username
        run: git config --global user.name "webiny-bot"
      - name: Create ".npmrc" file in the project root, with a dummy auth token
        run: echo '//localhost:4873/:_authToken="dummy-auth-token"' > .npmrc
      - name: Version and publish to Verdaccio
        run: yarn release --type=verdaccio
      - name: Upload verdaccio files
        uses: actions/upload-artifact@v3
        with:
          name: verdaccio-files
          retention-days: 1
          path: |
            .verdaccio/
            .verdaccio.yaml
  test-create-webiny-project:
    needs: verdaccio-publish
    name: Test "create-webiny-project"
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        node:
          - 18
    runs-on: ${{ matrix.os }}
    env:
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - uses: actions/download-artifact@v3
        with:
          name: verdaccio-files
          path: verdaccio-files
      - name: Start Verdaccio local server
        working-directory: verdaccio-files
        run: npx pm2 start verdaccio -- -c .verdaccio.yaml
      - name: Configure NPM to use local registry
        run: npm config set registry http://localhost:4873
      - name: Set git email
        run: git config --global user.email "webiny-bot@webiny.com"
      - name: Set git username
        run: git config --global user.name "webiny-bot"
      - name: Disable Webiny telemetry
        run: >
          mkdir ~/.webiny && echo '{ "id": "ci", "telemetry": false }' >
          ~/.webiny/config
      - name: Create a new Webiny project
        run: >
          npx create-webiny-project@local-npm test-project --tag local-npm
          --no-interactive --assign-to-yarnrc
          '{"npmRegistryServer":"http://localhost:4873","unsafeHttpWhitelist":["localhost"]}'
          --template-options '{"region":"eu-central-1"}'
